@model StorageMapModel

@{
    ViewBag.Title = "Dash: Storage Map";
}

<h1>Storage Map for @Model.BNumber</h1>

<div class="row">
    <div class="col-md-12">
        <form method="GET" action="@Model.BNumber">
            <p>Resolve relative path:</p>
            <p>
                <input type="text" style="width:50%" name="resolveRelativePath" value="@Model.PathToResolve" />
                <button type="submit">Resolve</button>
            </p>
            @if (Model.ErrorMessage.HasText())
            {
                <p class="bg-danger" style="padding: 6px">@Model.ErrorMessage</p>
            }
            else
            {
                <p class="bg-primary" style="padding: 6px">
                    Resolved AWS Key: <strong>@Model.ResolvedAwsKey</strong>
                </p>
            }
        </form>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <p>
            <strong>Bucket:</strong> @Model.StorageMap.BucketName
        </p>
        <p>
            <strong>Storage Manifest Created:</strong> @StringUtils.GetFriendlyAge(Model.StorageMap.StorageManifestCreated)
        </p>
        <p>
            <strong>Map Built:</strong> @StringUtils.GetFriendlyAge(Model.StorageMap.Built)
        </p>

        <p>
            Versions: @foreach (var versionSet in Model.StorageMap.VersionSets.OrderByDescending(vs => vs.Key))
                      {
                          <a href="#@versionSet.Key">@versionSet.Key</a>
                      }
        </p>

        @foreach (var versionSet in Model.StorageMap.VersionSets.OrderByDescending(vs => vs.Key))
        {
            <a name="@versionSet.Key"></a>
            <h3>@versionSet.Key</h3>
            <ul>
                @foreach (var value in versionSet.Value.OrderBy(v => v))
                {
                    <li><a href='?resolveRelativePath=@value.Replace("#", Model.BNumber)'>@value</a></li>
                }
            </ul>
        }
    </div>
</div>
